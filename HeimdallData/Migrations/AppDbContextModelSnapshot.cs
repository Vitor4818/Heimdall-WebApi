// <auto-generated />
using HeimdallData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HeimdallData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HeimdallModel.CategoriaUsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CategoriasUsuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Usuário"
                        });
                });

            modelBuilder.Entity("HeimdallModel.MotoModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("numChassi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipoMoto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Moto");
                });

            modelBuilder.Entity("HeimdallModel.TagRfidModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aplicacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Banda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FaixaFrequencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MotoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MotoId")
                        .IsUnique();

                    b.ToTable("TagsRfid");
                });

            modelBuilder.Entity("HeimdallModel.UsuarioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("CategoriaUsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("CategoriaUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HeimdallModel.TagRfidModel", b =>
                {
                    b.HasOne("HeimdallModel.MotoModel", "Moto")
                        .WithOne("TagRfid")
                        .HasForeignKey("HeimdallModel.TagRfidModel", "MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("HeimdallModel.UsuarioModel", b =>
                {
                    b.HasOne("HeimdallModel.CategoriaUsuarioModel", "CategoriaUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("CategoriaUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaUsuario");
                });

            modelBuilder.Entity("HeimdallModel.CategoriaUsuarioModel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("HeimdallModel.MotoModel", b =>
                {
                    b.Navigation("TagRfid");
                });
#pragma warning restore 612, 618
        }
    }
}
